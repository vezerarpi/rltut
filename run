#!/usr/bin/env python3

import subprocess
import argparse


def sh(cmd, **args):
    if subprocess.call(cmd.format(**args), shell=True):
        exit(1)


def build():
    sh('docker build --rm -t rltut .')


def run(command):
    sh('docker run --rm -it rltut {command}',
       command=' '.join(command))


def notebook():
    password = subprocess.check_output(
        'docker run --rm -i -v `pwd`:/work -w /work rltut'
        ' python3 get_ipython_password.py',
        shell=True).decode('utf-8').rstrip('\n')
    sh('docker rm -f rltut-notebook || true')
    sh('docker run -d --name rltut-notebook -p 6767:6767'
       ' -v `pwd`:/work -w /work'
       ' -e PYTHONPATH=/work'
       ' rltut'
       ' bash -c \'Xvfb -screen 0 1400x900x24 :99 &'
       ' DISPLAY=:99 jupyter notebook --port=6767 --ip="*"'
       ' --allow-root --NotebookApp.password={password}\'',
       password=password)
    print('Running notebook at http://localhost:6767')


parser = argparse.ArgumentParser(
    description='Runner script for rltut'
)
parser.set_defaults(action=lambda: parser.print_help())
subs = parser.add_subparsers()
subs.add_parser('build').set_defaults(action=build)
subs.add_parser('notebook').set_defaults(action=notebook)
p = subs.add_parser('run')
p.add_argument('command', nargs='*')
p.set_defaults(action=run)

args = vars(parser.parse_args())
action = args.pop('action')
action(**args)
